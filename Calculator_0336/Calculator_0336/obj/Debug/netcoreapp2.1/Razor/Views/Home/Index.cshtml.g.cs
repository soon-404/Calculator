#pragma checksum "C:\Users\Admin\Desktop\Calculator\Calculator_0336\Calculator_0336\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5b9733af8c43db6d6bc1058960f5a9f36fa5cef1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Admin\Desktop\Calculator\Calculator_0336\Calculator_0336\Views\_ViewImports.cshtml"
using Calculator_0336;

#line default
#line hidden
#line 2 "C:\Users\Admin\Desktop\Calculator\Calculator_0336\Calculator_0336\Views\_ViewImports.cshtml"
using Calculator_0336.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5b9733af8c43db6d6bc1058960f5a9f36fa5cef1", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a9fa0454d20b66436193c91b6092b2c0e130b50", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Admin\Desktop\Calculator\Calculator_0336\Calculator_0336\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Calculator";

#line default
#line hidden
            BeginContext(46, 11158, true);
            WriteLiteral(@"<script>
    var xmlhttp = new XMLHttpRequest();
    function MakeReq(serverpage, objID) {
        let obj = document.getElementById(objID);
        xmlhttp.open(""GET"", serverpage);
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                obj.innerHTML = xmlhttp.responseText;
                textInput = document.getElementById(objID).innerHTML;
            }
        }
        xmlhttp.send(null);
    }

    var textInput = """"
    var boolVar = false;

    function put0() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }

        if (boolVar == true) {
            textInput = ""0""
            boolVar = false
        }
        else {
            textInput += ""0""
        }
        document.getElementById(""num");
            WriteLiteral(@"Text"").innerHTML = textInput;
    }
    function put1() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }

        if (boolVar == true) {
            textInput = ""1""
            boolVar = false
        }
        else {
            textInput += ""1""
        }
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function put2() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""2""
            boolVar = false
        }
        else {
            textInput += ""2""
        }
        document.getElementById(""numTe");
            WriteLiteral(@"xt"").innerHTML = textInput;
    }
    function put3() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""3""
            boolVar = false
        }
        else {
            textInput += ""3""
        }
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function put4() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""4""
            boolVar = false
        }
        else {
            textInput += ""4""
        }
        document.getElementById(""numText"")");
            WriteLiteral(@".innerHTML = textInput;
    }
    function put5() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""5""
            boolVar = false
        }
        else {
            textInput += ""5""
        }
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function put6() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""6""
            boolVar = false
        }
        else {
            textInput += ""6""
        }
        document.getElementById(""numText"").inn");
            WriteLiteral(@"erHTML = textInput;
    }
    function put7() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""7""
            boolVar = false
        }
        else {
            textInput += ""7""
        }
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function put8() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""8""
            boolVar = false
        }
        else {
            textInput += ""8""
        }
        document.getElementById(""numText"").innerHT");
            WriteLiteral(@"ML = textInput;
    }
    function put9() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        if (boolVar == true) {
            textInput = ""9""
            boolVar = false
        }
        else {
            textInput += ""9""
        }
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putAdd() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        boolVar = false
        textInput += "" + ""
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putSub() {
        if (textInput.length > 38) {
            alert(""M");
            WriteLiteral(@"aximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        boolVar = false
        textInput += "" - ""
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putMultiply() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        boolVar = false
        textInput += "" * ""
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putDevide() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
     ");
            WriteLiteral(@"   boolVar = false
        textInput += "" / ""
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putDot() {
        if (textInput.length > 38) {
            alert(""Maximum Value Enter!"");
            boolVar = true;
            textInput = ""Enter Number"";
            document.getElementById(""numText"").innerHTML = textInput;
            return;
        }
        boolVar = false
        textInput += "".""
        document.getElementById(""numText"").innerHTML = textInput;
    }
    function putClear() {
        boolVar = false
        textInput = """"
        document.getElementById(""numText"").innerHTML = ""Enter Number"";
    }
    function putEqual() {
        var lastChar = textInput[textInput.length - 1];
        if (lastChar == "" "" || lastChar == ""."") {
            alert(""Error input!"");
        }
        else {
            boolVar = true;
            MakeReq('/Home/Calculate/?number=' + textInput.replaceAll("" + "", "" %2B ""), 'numText'); return false;
 ");
            WriteLiteral(@"       }
    }
</script>

<fieldset class=""calContainer"">
    <legend class=""textHeader"">Basic Calculator</legend>
    <div class=""inputBox"">
        <p class=""inputText"" id=""numText""></p>
        <script>
            document.getElementById(""numText"").innerHTML = ""Enter Number"";
        </script>
    </div>

    <script>

    </script>
    <div class=""grid-container"">
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put1()"">
                1
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put2()"">
                2
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put3()"">
                3
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""putAdd()"">
                +
            </button>
        </div>
        <div class=""grid-item"">
        ");
            WriteLiteral(@"    <button class=""buttonCal"" onclick=""put4()"">
                4
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put5()"">
                5
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put6()"">
                6
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""putSub()"">
                -
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put7()"">
                7
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put8()"">
                8
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put9()"">
                9
            </button>
        </div>
        <div class=""grid-it");
            WriteLiteral(@"em"">
            <button class=""buttonCal"" onclick=""putMultiply()"">
                *
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""put0()"">
                0
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""putDot()"">
                .
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""putEqual()"">
                =
            </button>
        </div>
        <div class=""grid-item"">
            <button class=""buttonCal"" onclick=""putDevide()"">
                /
            </button>
        </div>
        <div class=""grid-item-clear"">
            <button class=""buttonClear"" onclick=""putClear()"">
                CLEAR
            </button>
        </div>
    </div>
</fieldset>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
